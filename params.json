{"name":"Libds","tagline":"Simple pure C data structures","body":"# libds - datastructures\r\n\r\n`libds` is a library providing simple datastructures. It is designed to be portable (to the point only\r\nrequiring memory allocation and ffreestanding environment).\r\n\r\n## Provided data structures\r\n* `ds/random.h` - random number generator\r\n* `ds/array.h` - resizable array list\r\n* `ds/btree.h` - ballanced tree (red/black tree)\r\n* `ds/hmap.h` - hashmap \r\n* `ds/queue.h` - (FIFO) queue\r\n* `ds/funcops.h` - standard function interfaces used by previous data structures (along with some defined concrete functions) \r\n\r\n## Requirements \r\n\r\n`libds` requires these headers to be present at build environment:\r\n\r\n* `<stdbool.h>`\r\n* `<stddef.h>`\r\n* `<stdint.h>`\r\n\r\n`libds` also requires these extern functions:\r\n\r\n* `extern void* malloc(size_t n)`\r\n* `extern void* calloc(size_t num, size_t n)`\r\n* `extern void* realloc(void* a, size_t n)`\r\n* `extern void  free(void* a)`\r\n* `extern int   strcmp(const char* a, const char* b)`\r\n* `extern void  memset(char* c, int v, size_t s)`\r\n\r\n## Building libds\r\n\r\nTo build libds, simply invoke `make all` in the root directory. You will need to provide suitable `SYSROOT` argument or a `PREFIX` argument. `INCLUDE` argument can be overwritten to change where headers will be copied to (they will always be in `INCLUDE`/`ds` directory).","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}